/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        fj_combo {
            bindings = <&caps_word>;
            key-positions = <16 19>;
        };

        jk_combo {
            bindings = <&hmr RS(RGUI) ESC>;
            key-positions = <19 20>;
            layers = <0>;
        };

        df_combo {
            bindings = <&hml LS(LGUI) ESC>;
            key-positions = <15 16>;
            layers = <0>;
        };

        jk_combo_symbs {
            bindings = <&hmr RS(RGUI) BSPC>;
            key-positions = <19 20>;
            layers = <1>;
        };

        df_combo_symbs {
            bindings = <&hml LS(LGUI) SPACE>;
            key-positions = <15 16>;
            layers = <1>;
        };

        main_thumbs {
            bindings = <&lt 3 ESC>;
            key-positions = <38 39>;
        };

        f-thb_combo {
            bindings = <&hml LS(SPACE) ESC>;
            key-positions = <16 38>;
            layers = <0>;
        };

        j-thb_combo {
            bindings = <&hmr RS(BSPC) ESC>;
            key-positions = <19 39>;
            layers = <0>;
        };
    };

    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <50>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        rev_semi: rev_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "REV_SEMI";
            bindings = <&kp COLON>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hmr_semi: hmr_semi {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR_SEMI";
            bindings = <&kp>, <&rev_semi>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <100>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <36 37 38 39 40 41 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
&kp HOME               &kp Q           &kp W        &kp E        &kp R         &kp T          &kp Y       &kp U         &kp I        &kp O        &kp P               &kp END
&kp SQT                &hml LCTRL A    &hml LALT S  &hml LGUI D  &hml LSHFT F  &kp G          &kp H       &hmr RSHFT J  &hmr RGUI K  &hmr RALT L  &hmr LCTRL COLON    &kp SQT
&mt LC(LG(LALT)) LBKT  &mt LC(LALT) Z  &kp X        &kp C        &kp V         &kp B          &kp N       &kp M         &kp COMMA    &kp DOT      &mt LC(LALT) SLASH  &mt LC(LG(LALT)) RBKT
                                                    &lt 4 BSPC   &lt 2 TAB     &lt 3 SPACE    &lt 1 BSPC  &lt 2 RET     &lt 4 DEL
            >;

            label = "Base";
        };

        symbols_layer {
            display-name = "Symbols";
            bindings = <
&trans  &kp PIPE         &kp AT          &kp UNDER       &kp DLLR         &kp PRCNT    &kp CARET  &kp PLUS         &kp ASTERISK    &kp GRAVE       &kp BACKSLASH    &trans
&trans  &hml LCTRL AMPS  &hml LALT LPAR  &hml LGUI LBRC  &hml LSHFT LBKT  &kp EQUAL    &kp MINUS  &hmr RSHFT RBKT  &hmr RGUI RBRC  &hmr RALT RPAR  &hmr LCTRL SEMI  &kp DQT
&trans  &trans           &kp HASH        &kp TILDE       &kp QMARK        &trans       &trans     &kp EXCL         &kp LT          &kp GT          &trans           &trans
                                         &trans          &trans           &trans       &trans     &trans           &trans
            >;

            label = "Symbls";
        };

        nav_layer {
            display-name = "Nav";
            bindings = <
&trans  &trans  &trans         &trans         &trans          &trans    &trans    &kp LG(LEFT)  &kp LA(LEFT)  &kp LA(RIGHT)  &kp LG(RIGHT)  &trans
&trans  &trans  &hml LALT ESC  &hml LGUI RET  &hml LSHFT TAB  &trans    &kp LEFT  &kp DOWN      &kp UP        &kp RIGHT      &trans         &trans
&trans  &trans  &kp LG(X)      &kp LG(C)      &kp LG(V)       &trans    &trans    &kp LG(BSPC)  &kp LA(BSPC)  &kp LA(DEL)    &kp LG(DEL)    &trans
                               &kp DEL        &kp BSPC        &trans    &kp BSPC  &kp DEL       &trans
            >;

            label = "Nav";
        };

        nums_layer {
            display-name = "Nums";
            bindings = <
&trans  &trans         &kp N7        &kp N8        &kp N9         &trans    &trans  &kp N7         &kp N8        &kp N9        &trans         &trans
&trans  &hml LCTRL N0  &hml LALT N6  &hml LCMD N5  &hml LSHFT N4  &trans    &trans  &hmr RSHFT N4  &hmr RCMD N5  &hmr RALT N6  &hmr LCTRL N0  &trans
&trans  &trans         &kp N1        &kp N2        &kp N3         &trans    &trans  &kp N1         &kp N2        &kp N3        &trans         &trans
                                     &trans        &trans         &trans    &trans  &trans         &trans
            >;

            label = "Numbers";
        };

        magic_layer {
            display-name = "Magic";
            bindings = <
&bootloader  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7        &kp N8           &kp N9     &kp N0  &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp RIGHT  &trans  &trans
&kp LSHFT    &out OUT_TOG  &trans        &trans        &trans        &trans          &trans    &kp C_BRI_DN  &kp C_BRI_UP     &trans     &trans  &trans
                                         &bootloader   &trans        &kp SPACE       &kp RET   &trans        &bootloader
            >;

            label = "Magic";
        };
    };
};
